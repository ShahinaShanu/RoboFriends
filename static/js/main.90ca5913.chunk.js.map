{"version":3,"sources":["components/card.js","components/cardlist.js","robot.js","components/searchbox.js","components/scroll.js","containers/app.js","reportWebVitals.js","index.js"],"names":["card","id","name","email","className","alt","src","cardlist","robots","map","user","i","roboname","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","length","this","filteredrobos","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4NAYeA,EATJ,SAAC,GACX,IADYC,EACb,EADaA,GAAGC,EAChB,EADgBA,KAAKC,EACrB,EADqBA,MAEjB,OACC,sBAAKC,UAAU,sDAAf,UACD,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BL,EAA1B,mBAClB,6BAAKC,IACL,4BAAIC,QCaMI,EAnBA,SAAC,GACf,IADgBC,EACjB,EADiBA,OAEb,OAAO,8BAEDA,EAAOC,KAAI,SAACC,EAAMC,GAEjB,OACD,cAAC,EAAD,CAECV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHbQ,SCXFH,EAAO,CACpB,CACIP,GAAI,EACJW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAG,EACHW,SAAS,OACTT,MAAM,kBAEV,CACIF,GAAG,EACHW,SAAS,OACTT,MAAM,kBAEV,CACIF,GAAI,EACJW,SAAS,OACTT,MAAM,kBAEV,CACIF,GAAG,EACHW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAG,EACHW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAI,EACJW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAG,EACHW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAG,EACHW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAG,GACHW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAG,GACHW,SAAS,QACTT,MAAM,mBAEV,CACIF,GAAG,GACHW,SAAS,QACTT,MAAM,oBChDKU,EATC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAChBW,KAAK,SAASC,YAAY,eAC1BC,SAAUH,OCERI,G,MARF,SAACC,GACd,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,aCiDCC,E,kDA3CZ,aAAc,IAAD,8BACT,gBAcJC,eAAgB,SAACC,GACT,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAd5C,EAAKC,MAAM,CACPxB,OAAO,GACPqB,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACpB,OAAO6B,S,oBAOzC,WAEI,GAAI7B,EAAO8B,OAGP,CAAC,IAAD,EAC2BC,KAAKP,MAAzBxB,EADP,EACOA,OAAOqB,EADd,EACcA,YACJW,EAAchC,EAAOiC,QAAO,SAAAjC,GAClC,OAAOA,EAAON,KAAKwC,cAAcC,SAASd,EAAYa,kBAEzD,OACC,sBAAKtC,UAAU,KAAf,UACD,oBAAIA,UAAU,KAAd,yBACC,cAAC,EAAD,CAAWU,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UAED,cAAC,EAAD,CAAUlB,OAAQgC,SAbnB,OAAO,gD,GAzBDI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACR,cAAC,EAAD,IACEC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.90ca5913.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst card=({id,name,email})=>\r\n{\r\n    return(\r\n     <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\r\n    <img alt='robo' src={`https://robohash.org/${id}?size=200x200`}/>\r\n     <h2>{name}</h2>\r\n     <p>{email}</p>\r\n    </div>);\r\n}\r\nexport default card;","import React from 'react';\r\nimport Card from'./card';\r\n\r\nconst cardlist=({robots})=>\r\n{\r\n    return(<div>\r\n        {\r\n          robots.map((user, i)=>\r\n          {\r\n           return (\r\n          <Card \r\n          key={i} \r\n           id={robots[i].id} \r\n           name={robots[i].name} \r\n           email={robots[i].email}/>\r\n             );\r\n         })\r\n      }\r\n   \r\n   </div>);\r\n\r\n}\r\nexport default cardlist;","export const robots=[\r\n{\r\n    id: 1,\r\n    roboname:'shanu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id:2,\r\n    roboname:'anju',\r\n    email:'shan@gmail.com'\r\n},\r\n{\r\n    id:3,\r\n    roboname:'shan',\r\n    email:'shnu@gmail.com'\r\n},\r\n{\r\n    id: 4,\r\n    roboname:'sonu',\r\n    email:'sonu@gmail.com'\r\n},\r\n{\r\n    id:5,\r\n    roboname:'shanu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id:6,\r\n    roboname:'shanu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id: 7,\r\n    roboname:'shanu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id:8,\r\n    roboname:'shanu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id:9,\r\n    roboname:'shanu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id:10,\r\n    roboname:'shahu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id:11,\r\n    roboname:'shahu',\r\n    email:'shanu@gmail.com'\r\n},\r\n{\r\n    id:12,\r\n    roboname:'shahu',\r\n    email:'shanu@gmail.com'\r\n}\r\n\r\n];","import React from 'react';\r\n\r\nconst Searchbox=({searchChange})=>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n             type=\"search\" placeholder=\"search robos\"\r\n             onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Searchbox;","import React from 'react';\r\nconst Scroll=(props)=>{\r\nreturn(\r\n    <div style={{overflowY:'scroll',border:'5px solid black',height:'500px'}}>\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport Cardlist from '../components/cardlist';\r\nimport { robots } from '../robot'; //we can also use this local file of robolist array.\r\nimport Searchbox from '../components/searchbox';\r\nimport '../containers/app.css';\r\nimport Scroll from '../components/scroll';\r\n\r\nclass App extends Component\r\n{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n   \r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')//Using fetch API\r\n        .then(response=>{\r\n            return response.json();\r\n        }).then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange =(event)=>{\r\n            this.setState({searchfield:event.target.value})\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(!robots.length){\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else{\r\n            const {robots,searchfield}=this.state;\r\n                const filteredrobos=robots.filter(robots=>{\r\n                return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n               })\r\n             return(\r\n              <div className=\"tc\">\r\n             <h1 className=\"f1\">Robofriends</h1>\r\n              <Searchbox searchChange={this.onSearchChange}/>\r\n              <Scroll>\r\n              {/* Cardlist is a children of component scroll */}\r\n             <Cardlist robots={filteredrobos}/>\r\n             </Scroll>\r\n             </div>);\r\n            \r\n            }\r\n        }\r\n\r\n    }\r\n export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './containers/app';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n <App/>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}